{"ast":null,"code":"// const API_KEY = \"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\"\n\n// const submitIcon = document.querySelector('#submit-icon')\n// const inputElement = document.querySelector('input')\n// const imageSection = document.querySelector('.images-section')\n\n// const getImages = async () => {\n\n//     const options = {\n//         method: 'POST',\n//         headers: {\n//             \"Authorization\": `Bearer ${API_KEY}`,\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify( {\n//            \"prompt\": inputElement.value,\n//             \"n\": 4,\n//             \"size\": \"1024x1024\"\n//         })\n//     }\n\n//     try {\n//         const response = await fetch('https://api.openai.com/v1/images/generations', options)\n//         const data = await response.json()\n\n//         data?.data.forEach((imageObject) => {\n//             const imageContainer = document.createElement('div')\n//             imageContainer.classList.add('image-container')\n//             const imageElement = document.createElement('img')\n//             imageElement.setAttribute('src', imageObject.url)\n//             imageContainer.append(imageElement)\n//             imageSection.append(imageContainer)\n//         })\n//     } catch (err) {\n//         console.error(\"Error fetching images:\", err);\n//     }\n// }\n\n// const handleEnterKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//         getImages();\n//     }\n// };\n\n// submitIcon.addEventListener('click', getImages)\n// inputElement.addEventListener('keypress', handleEnterKeyPress); \n\nconst submitIcon = document.querySelector('#submit-icon');\nconst inputElement = document.querySelector('input');\nconst imageSection = document.querySelector('.images-section');\nconst getImages = async () => {\n  const prompt = inputElement.value;\n  const n = 4;\n  const size = '1024x1024';\n  try {\n    const response = await fetch('/api/generate-images', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt,\n        n,\n        size\n      })\n    });\n    const data = await response.json();\n    data === null || data === void 0 ? void 0 : data.data.forEach(imageObject => {\n      const imageContainer = document.createElement('div');\n      imageContainer.classList.add('image-container');\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', imageObject.url);\n      imageContainer.append(imageElement);\n      imageSection.append(imageContainer);\n    });\n  } catch (err) {\n    console.error('Error fetching images:', err);\n  }\n};\nconst handleEnterKeyPress = event => {\n  if (event.key === 'Enter') {\n    getImages();\n  }\n};\nsubmitIcon.addEventListener('click', getImages);\ninputElement.addEventListener('keypress', handleEnterKeyPress);","map":{"version":3,"names":["submitIcon","document","querySelector","inputElement","imageSection","getImages","prompt","value","n","size","response","fetch","method","headers","body","JSON","stringify","data","json","forEach","imageObject","imageContainer","createElement","classList","add","imageElement","setAttribute","url","append","err","console","error","handleEnterKeyPress","event","key","addEventListener"],"sources":["/Users/oscarsant/total_repaso/projects/dalle_imagegenerator_app/frontend/src/App.js"],"sourcesContent":["// const API_KEY = \"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\"\n\n// const submitIcon = document.querySelector('#submit-icon')\n// const inputElement = document.querySelector('input')\n// const imageSection = document.querySelector('.images-section')\n\n// const getImages = async () => {\n\n//     const options = {\n//         method: 'POST',\n//         headers: {\n//             \"Authorization\": `Bearer ${API_KEY}`,\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify( {\n//            \"prompt\": inputElement.value,\n//             \"n\": 4,\n//             \"size\": \"1024x1024\"\n//         })\n//     }\n\n//     try {\n//         const response = await fetch('https://api.openai.com/v1/images/generations', options)\n//         const data = await response.json()\n        \n\n//         data?.data.forEach((imageObject) => {\n//             const imageContainer = document.createElement('div')\n//             imageContainer.classList.add('image-container')\n//             const imageElement = document.createElement('img')\n//             imageElement.setAttribute('src', imageObject.url)\n//             imageContainer.append(imageElement)\n//             imageSection.append(imageContainer)\n//         })\n//     } catch (err) {\n//         console.error(\"Error fetching images:\", err);\n//     }\n// }\n\n// const handleEnterKeyPress = (event) => {\n//     if (event.key === 'Enter') {\n//         getImages();\n//     }\n// };\n\n// submitIcon.addEventListener('click', getImages)\n// inputElement.addEventListener('keypress', handleEnterKeyPress); \n\nconst submitIcon = document.querySelector('#submit-icon');\nconst inputElement = document.querySelector('input');\nconst imageSection = document.querySelector('.images-section');\n\nconst getImages = async () => {\n  const prompt = inputElement.value;\n  const n = 4;\n  const size = '1024x1024';\n\n  try {\n    const response = await fetch('/api/generate-images', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ prompt, n, size })\n    });\n    \n    const data = await response.json();\n    data?.data.forEach((imageObject) => {\n      const imageContainer = document.createElement('div');\n      imageContainer.classList.add('image-container');\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', imageObject.url);\n      imageContainer.append(imageElement);\n      imageSection.append(imageContainer);\n    });\n  } catch (err) {\n    console.error('Error fetching images:', err);\n  }\n};\n\nconst handleEnterKeyPress = (event) => {\n  if (event.key === 'Enter') {\n    getImages();\n  }\n};\n\nsubmitIcon.addEventListener('click', getImages);\ninputElement.addEventListener('keypress', handleEnterKeyPress);\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMA,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC;AACzD,MAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACpD,MAAME,YAAY,GAAGH,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;AAE9D,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,MAAM,GAAGH,YAAY,CAACI,KAAK;EACjC,MAAMC,CAAC,GAAG,CAAC;EACX,MAAMC,IAAI,GAAG,WAAW;EAExB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,MAAM;QAAEE,CAAC;QAAEC;MAAK,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACE,OAAO,CAAEC,WAAW,IAAK;MAClC,MAAMC,cAAc,GAAGpB,QAAQ,CAACqB,aAAa,CAAC,KAAK,CAAC;MACpDD,cAAc,CAACE,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC/C,MAAMC,YAAY,GAAGxB,QAAQ,CAACqB,aAAa,CAAC,KAAK,CAAC;MAClDG,YAAY,CAACC,YAAY,CAAC,KAAK,EAAEN,WAAW,CAACO,GAAG,CAAC;MACjDN,cAAc,CAACO,MAAM,CAACH,YAAY,CAAC;MACnCrB,YAAY,CAACwB,MAAM,CAACP,cAAc,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;EAC9C;AACF,CAAC;AAED,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;IACzB7B,SAAS,CAAC,CAAC;EACb;AACF,CAAC;AAEDL,UAAU,CAACmC,gBAAgB,CAAC,OAAO,EAAE9B,SAAS,CAAC;AAC/CF,YAAY,CAACgC,gBAAgB,CAAC,UAAU,EAAEH,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}